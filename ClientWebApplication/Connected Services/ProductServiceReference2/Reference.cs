//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientWebApplication.ProductServiceReference2 {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProductServiceReference2.ProductWebService2Soap")]
    public interface ProductWebService2Soap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddProduct", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AddProduct(string ProductId, string ProductName, string CateName, int QTY, int Price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddProduct", ReplyAction="*")]
        System.Threading.Tasks.Task<string> AddProductAsync(string ProductId, string ProductName, string CateName, int QTY, int Price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/autoProductId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string autoProductId();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/autoProductId", ReplyAction="*")]
        System.Threading.Tasks.Task<string> autoProductIdAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddCategory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AddCategory(string CategoryId, string CategoryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddCategory", ReplyAction="*")]
        System.Threading.Tasks.Task<string> AddCategoryAsync(string CategoryId, string CategoryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/autoCategoryId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string autoCategoryId();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/autoCategoryId", ReplyAction="*")]
        System.Threading.Tasks.Task<string> autoCategoryIdAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCategoryName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getCategoryName();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCategoryName", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getCategoryNameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCategoryId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getCategoryId(string CategoryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getCategoryId", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getCategoryIdAsync(string CategoryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearchProduct", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SearchProduct(string ProductName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearchProduct", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SearchProductAsync(string ProductName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getAllProduct", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet getAllProduct();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getAllProduct", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> getAllProductAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateProductName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateProductName(string ProductId, string ProductnewName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateProductName", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateProductNameAsync(string ProductId, string ProductnewName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PlaceOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PlaceOrder(string OrderId, string ProductId, int OrderQty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PlaceOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PlaceOrderAsync(string OrderId, string ProductId, int OrderQty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/autoOrderId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string autoOrderId();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/autoOrderId", ReplyAction="*")]
        System.Threading.Tasks.Task<string> autoOrderIdAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddStock", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool AddStock(string ProductId, int NewStock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddStock", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> AddStockAsync(string ProductId, int NewStock);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ProductWebService2SoapChannel : ClientWebApplication.ProductServiceReference2.ProductWebService2Soap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductWebService2SoapClient : System.ServiceModel.ClientBase<ClientWebApplication.ProductServiceReference2.ProductWebService2Soap>, ClientWebApplication.ProductServiceReference2.ProductWebService2Soap {
        
        public ProductWebService2SoapClient() {
        }
        
        public ProductWebService2SoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductWebService2SoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductWebService2SoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductWebService2SoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string AddProduct(string ProductId, string ProductName, string CateName, int QTY, int Price) {
            return base.Channel.AddProduct(ProductId, ProductName, CateName, QTY, Price);
        }
        
        public System.Threading.Tasks.Task<string> AddProductAsync(string ProductId, string ProductName, string CateName, int QTY, int Price) {
            return base.Channel.AddProductAsync(ProductId, ProductName, CateName, QTY, Price);
        }
        
        public string autoProductId() {
            return base.Channel.autoProductId();
        }
        
        public System.Threading.Tasks.Task<string> autoProductIdAsync() {
            return base.Channel.autoProductIdAsync();
        }
        
        public string AddCategory(string CategoryId, string CategoryName) {
            return base.Channel.AddCategory(CategoryId, CategoryName);
        }
        
        public System.Threading.Tasks.Task<string> AddCategoryAsync(string CategoryId, string CategoryName) {
            return base.Channel.AddCategoryAsync(CategoryId, CategoryName);
        }
        
        public string autoCategoryId() {
            return base.Channel.autoCategoryId();
        }
        
        public System.Threading.Tasks.Task<string> autoCategoryIdAsync() {
            return base.Channel.autoCategoryIdAsync();
        }
        
        public System.Data.DataSet getCategoryName() {
            return base.Channel.getCategoryName();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getCategoryNameAsync() {
            return base.Channel.getCategoryNameAsync();
        }
        
        public string getCategoryId(string CategoryName) {
            return base.Channel.getCategoryId(CategoryName);
        }
        
        public System.Threading.Tasks.Task<string> getCategoryIdAsync(string CategoryName) {
            return base.Channel.getCategoryIdAsync(CategoryName);
        }
        
        public System.Data.DataSet SearchProduct(string ProductName) {
            return base.Channel.SearchProduct(ProductName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SearchProductAsync(string ProductName) {
            return base.Channel.SearchProductAsync(ProductName);
        }
        
        public System.Data.DataSet getAllProduct() {
            return base.Channel.getAllProduct();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getAllProductAsync() {
            return base.Channel.getAllProductAsync();
        }
        
        public string UpdateProductName(string ProductId, string ProductnewName) {
            return base.Channel.UpdateProductName(ProductId, ProductnewName);
        }
        
        public System.Threading.Tasks.Task<string> UpdateProductNameAsync(string ProductId, string ProductnewName) {
            return base.Channel.UpdateProductNameAsync(ProductId, ProductnewName);
        }
        
        public string PlaceOrder(string OrderId, string ProductId, int OrderQty) {
            return base.Channel.PlaceOrder(OrderId, ProductId, OrderQty);
        }
        
        public System.Threading.Tasks.Task<string> PlaceOrderAsync(string OrderId, string ProductId, int OrderQty) {
            return base.Channel.PlaceOrderAsync(OrderId, ProductId, OrderQty);
        }
        
        public string autoOrderId() {
            return base.Channel.autoOrderId();
        }
        
        public System.Threading.Tasks.Task<string> autoOrderIdAsync() {
            return base.Channel.autoOrderIdAsync();
        }
        
        public bool AddStock(string ProductId, int NewStock) {
            return base.Channel.AddStock(ProductId, NewStock);
        }
        
        public System.Threading.Tasks.Task<bool> AddStockAsync(string ProductId, int NewStock) {
            return base.Channel.AddStockAsync(ProductId, NewStock);
        }
    }
}
